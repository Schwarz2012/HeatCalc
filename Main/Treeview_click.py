
from PyQt5.QtWidgets import QSpacerItem,QSizePolicy
from Classes_list import MyLabel2
from Front_calculations import adsource_enable

def click(self, tree):
    current_item = tree.currentIndex()
    parent_name = current_item.parent()
    while self.central_grid.count():
        item = self.central_grid.takeAt(0)
        widget = item.widget()
        if widget is not None:
            widget.setParent(None)
    while self.center_window_layout.count():
        item = self.center_window_layout.takeAt(0)
        if item.widget():
            item.widget().setParent(None)
        elif item.layout():
            item.layout().setParent(None)
    while self.central_water_button_layout.count():
        item = self.central_water_button_layout.takeAt(0)
        if item.widget():
            item.widget().setParent(None)
        elif item.layout():
            item.layout().setParent(None)
    while self.top_menu_layout.count():
        item = self.top_menu_layout.takeAt(0)
        widget = item.widget()
        if widget is not None:
            widget.setParent(None)
    for item in self.scene.items():
        self.scene.removeItem(item)
    self.center_window_layout.addWidget(self.central_label)
    self.center_window_layout.addLayout(self.central_grid)
    if ("Model tree" in current_item.data()) == True:
        self.central_grid.addWidget(MyLabel2('Geometry units'), 0,0)
        self.central_grid.addWidget(self.unit_box,0,1)
        self.central_grid.addWidget(MyLabel2('Temperature units'), 1,0)
        self.central_grid.addWidget(self.temp_box,1,1)
        self.top_menu_layout.addWidget(self.new_button)
        self.top_menu_layout.addWidget(self.save_button)
        self.top_menu_layout.addWidget(self.load_button)
        self.top_menu_layout.addWidget(self.info_button)
    elif ("Room" in current_item.data()) == True:
        self.central_grid.addWidget(MyLabel2('Room length'), 0,0)
        self.central_grid.addWidget(self.main_data['Room']['RL'], 0,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 0,2)
        self.central_grid.addWidget(MyLabel2('Room width'), 1,0)
        self.central_grid.addWidget(self.main_data['Room']['RW'], 1,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 1,2)
        self.central_grid.addWidget(MyLabel2('Room height'), 2,0)
        self.central_grid.addWidget(self.main_data['Room']['RH'], 2,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 2,2)
        self.central_grid.addWidget(MyLabel2('Convection'),3,0)
        self.central_grid.addWidget(self.convection_box,3,1)
        if self.convection_box.currentIndex() == 1:
            adsource_enable(self)                

    elif ("Result" in current_item.data()) == True:
        self.top_menu_layout.addWidget(self.results_button) 
        self.top_menu_layout.addWidget(self.export_results_button)
        self.central_grid.addWidget(self.settings_label,0,0)
    elif ("Radiant" in current_item.data()) == True:
        parent_name = current_item.parent().data()
        num = current_item.data()[-1]
        self.central_grid.addWidget(MyLabel2(parent_name), 0,0)
        self.central_grid.addWidget(MyLabel2(current_item.data()), 0,1)
        self.central_grid.addWidget(MyLabel2('Left corner'), 1,1)
        self.central_grid.addWidget(MyLabel2('x'), 2,0)
        self.central_grid.addWidget(self.main_data[parent_name]['RS'][num]['coord']['x'], 2,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 2,2)
        self.central_grid.addWidget(MyLabel2('y'), 3,0)
        self.central_grid.addWidget(self.main_data[parent_name]['RS'][num]['coord']['y'], 3,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 3,2)
        self.central_grid.addWidget(MyLabel2('Size'), 4,1)
        self.central_grid.addWidget(MyLabel2('Width'), 5,0)
        self.central_grid.addWidget(self.main_data[parent_name]['RS'][num]['coord']['W'], 5,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 5,2)
        self.central_grid.addWidget(MyLabel2('length'), 6,0)
        self.central_grid.addWidget(self.main_data[parent_name]['RS'][num]['coord']['L'], 6,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 6,2)
        self.central_grid.addWidget(MyLabel2('Area'), 7,0)
        self.central_grid.addWidget(self.main_data[parent_name]['RS'][num]['area'], 7,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText() + '²'), 7,2)
        self.central_grid.addWidget(MyLabel2('Physical parametres'), 8,1)
        self.central_grid.addWidget(MyLabel2('Emissivity'), 9,0)
        self.central_grid.addWidget(self.main_data[parent_name]['RS'][num]['RS_eps'], 9,1)
        self.central_grid.addWidget(MyLabel2('1'), 9,2)
        self.central_grid.addWidget(MyLabel2('Surface temperature'), 10,0)
        self.central_grid.addWidget(self.main_data[parent_name]['RS'][num]['RS_T'], 10,1)
        self.central_grid.addWidget(MyLabel2(self.temp_box.currentText()), 10,2)
        if self.convection_box.currentIndex() == 1:
            self.central_grid.addWidget(MyLabel2('Internal resistance'), 11,0)               
            self.central_grid.addWidget(MyLabel2(self.main_data[parent_name]['alpha'].text()),11,1)
            self.central_grid.addWidget(MyLabel2('(m²*K)/W'),11,2)
        self.top_menu_layout.addWidget(self.Water_button)
        self.top_menu_layout.addWidget(self.Del_button)   
    elif ("Door" in current_item.data()) == True:
        parent_name = current_item.parent().data()
        num = current_item.data()[-1]
        self.central_grid.addWidget(MyLabel2(parent_name), 0,0)
        self.central_grid.addWidget(MyLabel2(current_item.data()), 0,1)
        self.central_grid.addWidget(MyLabel2('Left corner'), 1,1)
        self.central_grid.addWidget(MyLabel2('x'), 2,0)
        self.central_grid.addWidget(self.main_data[parent_name]['door'][num]['coord']['x'], 2,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 2,2)
        self.central_grid.addWidget(MyLabel2('y'), 3,0)
        self.central_grid.addWidget(self.main_data[parent_name]['door'][num]['coord']['y'], 3,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 3,2)
        self.central_grid.addWidget(MyLabel2('Size'), 4,1)
        self.central_grid.addWidget(MyLabel2('Width'), 5,0)
        self.central_grid.addWidget(self.main_data[parent_name]['door'][num]['coord']['W'], 5,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 5,2)
        self.central_grid.addWidget(MyLabel2('Height'), 6,0)
        self.central_grid.addWidget(self.main_data[parent_name]['door'][num]['coord']['L'], 6,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText()), 6,2)
        self.central_grid.addWidget(MyLabel2('Area'), 7,0)
        self.central_grid.addWidget(self.main_data[parent_name]['door'][num]['area'], 7,1)
        self.central_grid.addWidget(MyLabel2(self.unit_box.currentText() + '²'), 7,2)
        self.central_grid.addWidget(MyLabel2('Physical parametres'), 8,1)
        self.central_grid.addWidget(MyLabel2('Emissivity'), 9,0)
        self.central_grid.addWidget(self.main_data[parent_name]['door'][num]['door_eps'], 9,1)
        self.central_grid.addWidget(MyLabel2('1'), 9,2)
        self.central_grid.addWidget(MyLabel2('U-value'), 10,0)
        self.central_grid.addWidget(self.main_data[parent_name]['door'][num]['door_U'], 10,1)
        self.central_grid.addWidget(MyLabel2('(m²*K)/W'), 10, 2)
        self.central_grid.addWidget(MyLabel2('External temperature'), 11,0)
        self.central_grid.addWidget(MyLabel2(self.main_data[parent_name]['Tout'].text()), 11,1)
        self.central_grid.addWidget(MyLabel2(self.temp_box.currentText()), 11, 2)
        if self.convection_box.currentIndex() == 1:
            self.central_grid.addWidget(MyLabel2('Internal resistance'), 12,0)               
            self.central_grid.addWidget(MyLabel2(self.main_data[parent_name]['alpha'].text()),12,1)
            self.central_grid.addWidget(MyLabel2('(m²*K)/W'),12,2)
        self.top_menu_layout.addWidget(self.Del_button)
    elif ("water" in current_item.data()) == True:
        parent_name = current_item.parent().parent().data()
        col_width = int(self.central_window_widget.width()/4)
        self.top_menu_layout.addWidget(self.construct_button)
        self.top_menu_layout.addWidget(self.Del_button)   
        self.central_grid.addWidget(MyLabel2('Distance between capillaries'), 0,0)
        self.central_grid.addWidget(self.mat_step_box[parent_name], 0,1)
        self.central_grid.addWidget(MyLabel2('mm'), 0,2)
        self.central_grid.addWidget(MyLabel2('Diameter of capillaries'), 1,0)
        self.central_grid.addWidget(self.mat_diam_box[parent_name], 1,1)
        self.central_grid.addWidget(MyLabel2('mm'), 1,2)
        self.central_grid.addWidget(MyLabel2('External condition'), 2,0)
        self.central_grid.addWidget(self.out_condiition_box[parent_name], 2,1)
        self.central_grid.addWidget(self.out_condiition_label[parent_name], 3,0)
        self.central_grid.addWidget(self.out_condiition_value[parent_name], 3,1)
        self.central_grid.addWidget(self.out_condiition_unit[parent_name], 3,2)
        self.water_table[parent_name].setFixedSize(self.central_window_widget.width(), 500)
        for i in range(4):
            self.water_table[parent_name].setColumnWidth(i, col_width)
        self.center_window_layout.addWidget(self.water_table[parent_name])
        self.center_window_layout.addLayout(self.central_water_button_layout)
        self.central_water_button_layout.addWidget(self.button_up)
        self.central_water_button_layout.addWidget(self.button_down)
        self.central_water_button_layout.addWidget(self.add_button)
        self.central_water_button_layout.addWidget(self.button_delete)
        self.center_window_layout.addItem(QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding))

    else:
        self.central_grid.addWidget(MyLabel2(current_item.data()), 0,0)
        self.central_grid.addWidget(MyLabel2('Emissivity'), 1,0)
        self.central_grid.addWidget(self.main_data[current_item.data()]['eps'], 1,1)
        self.central_grid.addWidget(MyLabel2('1'), 1,2)
        self.central_grid.addWidget(MyLabel2('U-value'), 2,0)
        self.central_grid.addWidget(self.main_data[current_item.data()]['U'], 2,1)
        self.central_grid.addWidget(MyLabel2('W/(m²*K)'), 2,2)
        self.central_grid.addWidget(MyLabel2('External temperature'), 3,0)
        self.central_grid.addWidget(self.main_data[current_item.data()]['Tout'], 3,1)
        self.central_grid.addWidget(MyLabel2(self.temp_box.currentText()), 3,2)
        self.top_menu_layout.addWidget(self.RS_button)
        if ("Wall" in current_item.data()) == True:
            self.top_menu_layout.addWidget(self.Door_button)
        if self.convection_box.currentIndex() == 1:
            self.central_grid.addWidget(MyLabel2('Internal resistance' ), 4,0)               
            self.central_grid.addWidget(self.alpha_box[current_item.data()],4,1)
            self.central_grid.addWidget(self.main_data[current_item.data()]['alpha'],5,1)
            self.central_grid.addWidget(MyLabel2('(m²*K)/W'),5,2)